@page
@model CookingAssistantAPI.Pages.CreateNewsModel
@{
    ViewData["Title"] = "Create News Article";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Create News Specific CSS -->
    <link href="/css/createnews.css?v=@DateTime.Now.Ticks" rel="stylesheet" />
</head>
<body>
    <div class="container mt-5">
        <h2>Create a New News Article</h2>

        <form id="createNewsForm" enctype="multipart/form-data">
            <!-- Article Description -->
            <div class="mb-3">
                <label for="ArticleDescription" class="form-label">Description</label>
                <input type="text" id="ArticleDescription" name="ArticleDescription" class="form-control" required maxlength="255" />
            </div>

            <!-- Article Content -->
            <div class="mb-3">
                <label for="ArticleContent" class="form-label">Content</label>
                <textarea id="ArticleContent" name="ArticleContent" class="form-control" required maxlength="5000"></textarea>
            </div>

            <!-- Image Upload -->
            <div class="mb-3">
                <label for="ArticleImage" class="form-label">News Image</label>
                <input type="file" id="ArticleImage" name="ArticleImage" class="form-control" accept="image/*" required />
            </div>

            <button type="button" id="createNewsButton" class="btn btn-primary" onclick="createNews()">Create News</button>
        </form>
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript to handle form submission -->
    <script>
        async function createNews() {
            const form = document.getElementById('createNewsForm');
            const formData = new FormData(form);

            // Disable the button to prevent multiple submissions
            const createNewsButton = document.getElementById('createNewsButton');
            createNewsButton.disabled = true;
            createNewsButton.innerText = "Creating...";

            try {
                const response = await fetch('http://localhost:5203/api/news/create', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    alert('News article created successfully!');
                    window.location.href = '/Dashboard'; // Redirect back to the dashboard
                } else {
                    const errorText = await response.text();
                    alert('Error creating news article: ' + errorText);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while creating the news article.');
            } finally {
                // Enable the button again after submission attempt
                createNewsButton.disabled = false;
                createNewsButton.innerText = "Create News";
            }
        }
    </script>
</body>
</html>
